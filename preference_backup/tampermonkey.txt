{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"HTML5视频播放工具","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":["https://user.qzone.qq.com/*"],"orig_includes":["*/play*","*play/*"],"orig_matches":["https://*.qq.com/*","https://www.weiyun.com/video_*","https://v.youku.com/v_play/*","https://v.youku.com/v_show/id_*","https://vku.youku.com/live/*","https://video.tudou.com/v/*","https://www.iqiyi.com/*","https://live.bilibili.com/*","https://www.bilibili.com/*","https://www.ixigua.com/*","https://www.toutiao.com/video/*","https://www.acfun.cn/*","https://live.acfun.cn/live/*","http://v.pptv.com/show/*","https://v.pptv.com/show/*","https://www.miguvideo.com/*","https://tv.sohu.com/*","https://film.sohu.com/album/*","https://www.mgtv.com/*","https://pan.baidu.com/*","https://yun.baidu.com/*","https://*.163.com/*","https://*.icourse163.org/*","http://video.sina.*/*","https://video.sina.*/*","http://k.sina.*/*","https://k.sina.*/*","https://weibo.com/*","https://*.weibo.com/*","https://pan.baidu.com/*","https://yun.baidu.com/*","http://v.ifeng.com/*","https://v.ifeng.com/*","http://news.mtime.com/*","http://video.mtime.com/*","https://www.youtube.com/*","https://www.ted.com/talks/*","https://www.twitch.tv/*","https://www.yy.com/*","https://www.huya.com/*","https://v.douyu.com/*","https://www.douyu.com/*","https://live.douyin.com/*","https://www.douyin.com/*","https://www.longzhu.com/*","https://www.zhanqi.tv/*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null,"user_modified":null},"storage":{"ts":1709281176496,"data":{"notificationVX":"bfalse"}},"enabled":true,"position":1,"file_url":"https://update.greasyfork.org/scripts/30545/HTML5%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE%E5%B7%A5%E5%85%B7.user.js","uuid":"2444501f-0a70-4b62-ae88-3661dcb2cc63","source":"","requires":[{"meta":{"name":"vue.min.js","url":"https://cdn.staticfile.org/vue/2.6.11/vue.min.js","ts":1709536122117,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"jquery.min.js","url":"https://cdn.staticfile.org/jquery/3.6.0/jquery.min.js","ts":1709536122141,"mimetype":"text/javascript"},"source":""}]},{"name":"「CSDNGreener」🍃CSDN广告完全过滤|免登录|个性化排版|最强老牌脚本|持续更新","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["www.csdn.net"],"orig_excludes":[],"orig_includes":["*://*.csdn.net/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null,"user_modified":null},"storage":{"ts":1663845644467,"data":{}},"enabled":true,"position":2,"file_url":"https://update.greasyfork.org/scripts/378351/%E3%80%8CCSDNGreener%E3%80%8D%F0%9F%8D%83CSDN%E5%B9%BF%E5%91%8A%E5%AE%8C%E5%85%A8%E8%BF%87%E6%BB%A4%7C%E5%85%8D%E7%99%BB%E5%BD%95%7C%E4%B8%AA%E6%80%A7%E5%8C%96%E6%8E%92%E7%89%88%7C%E6%9C%80%E5%BC%BA%E8%80%81%E7%89%8C%E8%84%9A%E6%9C%AC%7C%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0.user.js","uuid":"23bba36b-7596-4032-a9ed-302dfc8e62d6","source":"","requires":[{"meta":{"name":"jquery.cookie.min.js","url":"https://lf26-cdn-tos.bytecdntp.com/cdn/expire-1-M/jquery-cookie/1.4.1/jquery.cookie.min.js","ts":1713420264091,"mimetype":"text/javascript"},"source":"LyohIGpxdWVyeS5jb29raWUgdjEuNC4xIHwgTUlUICovCiFmdW5jdGlvbihhKXsiZnVuY3Rpb24iPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShbImpxdWVyeSJdLGEpOiJvYmplY3QiPT10eXBlb2YgZXhwb3J0cz9hKHJlcXVpcmUoImpxdWVyeSIpKTphKGpRdWVyeSl9KGZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoYSl7cmV0dXJuIGgucmF3P2E6ZW5jb2RlVVJJQ29tcG9uZW50KGEpfWZ1bmN0aW9uIGMoYSl7cmV0dXJuIGgucmF3P2E6ZGVjb2RlVVJJQ29tcG9uZW50KGEpfWZ1bmN0aW9uIGQoYSl7cmV0dXJuIGIoaC5qc29uP0pTT04uc3RyaW5naWZ5KGEpOlN0cmluZyhhKSl9ZnVuY3Rpb24gZShhKXswPT09YS5pbmRleE9mKCciJykmJihhPWEuc2xpY2UoMSwtMSkucmVwbGFjZSgvXFwiL2csJyInKS5yZXBsYWNlKC9cXFxcL2csIlxcIikpO3RyeXtyZXR1cm4gYT1kZWNvZGVVUklDb21wb25lbnQoYS5yZXBsYWNlKGcsIiAiKSksaC5qc29uP0pTT04ucGFyc2UoYSk6YX1jYXRjaChiKXt9fWZ1bmN0aW9uIGYoYixjKXt2YXIgZD1oLnJhdz9iOmUoYik7cmV0dXJuIGEuaXNGdW5jdGlvbihjKT9jKGQpOmR9dmFyIGc9L1wrL2csaD1hLmNvb2tpZT1mdW5jdGlvbihlLGcsaSl7aWYodm9pZCAwIT09ZyYmIWEuaXNGdW5jdGlvbihnKSl7aWYoaT1hLmV4dGVuZCh7fSxoLmRlZmF1bHRzLGkpLCJudW1iZXIiPT10eXBlb2YgaS5leHBpcmVzKXt2YXIgaj1pLmV4cGlyZXMsaz1pLmV4cGlyZXM9bmV3IERhdGU7ay5zZXRUaW1lKCtrKzg2NGU1KmopfXJldHVybiBkb2N1bWVudC5jb29raWU9W2IoZSksIj0iLGQoZyksaS5leHBpcmVzPyI7IGV4cGlyZXM9IitpLmV4cGlyZXMudG9VVENTdHJpbmcoKToiIixpLnBhdGg/IjsgcGF0aD0iK2kucGF0aDoiIixpLmRvbWFpbj8iOyBkb21haW49IitpLmRvbWFpbjoiIixpLnNlY3VyZT8iOyBzZWN1cmUiOiIiXS5qb2luKCIiKX1mb3IodmFyIGw9ZT92b2lkIDA6e30sbT1kb2N1bWVudC5jb29raWU/ZG9jdW1lbnQuY29va2llLnNwbGl0KCI7ICIpOltdLG49MCxvPW0ubGVuZ3RoO28+bjtuKyspe3ZhciBwPW1bbl0uc3BsaXQoIj0iKSxxPWMocC5zaGlmdCgpKSxyPXAuam9pbigiPSIpO2lmKGUmJmU9PT1xKXtsPWYocixnKTticmVha31lfHx2b2lkIDA9PT0ocj1mKHIpKXx8KGxbcV09cil9cmV0dXJuIGx9O2guZGVmYXVsdHM9e30sYS5yZW1vdmVDb29raWU9ZnVuY3Rpb24oYixjKXtyZXR1cm4gdm9pZCAwPT09YS5jb29raWUoYik/ITE6KGEuY29va2llKGIsIiIsYS5leHRlbmQoe30sYyx7ZXhwaXJlczotMX0pKSwhYS5jb29raWUoYikpfX0pOw=="},{"meta":{"name":"nprogress.min.js","url":"https://lf26-cdn-tos.bytecdntp.com/cdn/expire-1-M/nprogress/0.2.0/nprogress.min.js","ts":1713420264091,"mimetype":"text/javascript"},"source":"IWZ1bmN0aW9uKG4sZSl7ImZ1bmN0aW9uIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoZSk6Im9iamVjdCI9PXR5cGVvZiBleHBvcnRzP21vZHVsZS5leHBvcnRzPWUoKTpuLk5Qcm9ncmVzcz1lKCl9KHRoaXMsZnVuY3Rpb24oKXtmdW5jdGlvbiBuKG4sZSx0KXtyZXR1cm4gZT5uP2U6bj50P3Q6bn1mdW5jdGlvbiBlKG4pe3JldHVybiAxMDAqKC0xK24pfWZ1bmN0aW9uIHQobix0LHIpe3ZhciBpO3JldHVybiBpPSJ0cmFuc2xhdGUzZCI9PT1jLnBvc2l0aW9uVXNpbmc/e3RyYW5zZm9ybToidHJhbnNsYXRlM2QoIitlKG4pKyIlLDAsMCkifToidHJhbnNsYXRlIj09PWMucG9zaXRpb25Vc2luZz97dHJhbnNmb3JtOiJ0cmFuc2xhdGUoIitlKG4pKyIlLDApIn06eyJtYXJnaW4tbGVmdCI6ZShuKSsiJSJ9LGkudHJhbnNpdGlvbj0iYWxsICIrdCsibXMgIityLGl9ZnVuY3Rpb24gcihuLGUpe3ZhciB0PSJzdHJpbmciPT10eXBlb2Ygbj9uOm8obik7cmV0dXJuIHQuaW5kZXhPZigiICIrZSsiICIpPj0wfWZ1bmN0aW9uIGkobixlKXt2YXIgdD1vKG4pLGk9dCtlO3IodCxlKXx8KG4uY2xhc3NOYW1lPWkuc3Vic3RyaW5nKDEpKX1mdW5jdGlvbiBzKG4sZSl7dmFyIHQsaT1vKG4pO3IobixlKSYmKHQ9aS5yZXBsYWNlKCIgIitlKyIgIiwiICIpLG4uY2xhc3NOYW1lPXQuc3Vic3RyaW5nKDEsdC5sZW5ndGgtMSkpfWZ1bmN0aW9uIG8obil7cmV0dXJuKCIgIisobi5jbGFzc05hbWV8fCIiKSsiICIpLnJlcGxhY2UoL1xzKy9naSwiICIpfWZ1bmN0aW9uIGEobil7biYmbi5wYXJlbnROb2RlJiZuLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobil9dmFyIHU9e307dS52ZXJzaW9uPSIwLjIuMCI7dmFyIGM9dS5zZXR0aW5ncz17bWluaW11bTouMDgsZWFzaW5nOiJlYXNlIixwb3NpdGlvblVzaW5nOiIiLHNwZWVkOjIwMCx0cmlja2xlOiEwLHRyaWNrbGVSYXRlOi4wMix0cmlja2xlU3BlZWQ6ODAwLHNob3dTcGlubmVyOiEwLGJhclNlbGVjdG9yOidbcm9sZT0iYmFyIl0nLHNwaW5uZXJTZWxlY3RvcjonW3JvbGU9InNwaW5uZXIiXScscGFyZW50OiJib2R5Iix0ZW1wbGF0ZTonPGRpdiBjbGFzcz0iYmFyIiByb2xlPSJiYXIiPjxkaXYgY2xhc3M9InBlZyI+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz0ic3Bpbm5lciIgcm9sZT0ic3Bpbm5lciI+PGRpdiBjbGFzcz0ic3Bpbm5lci1pY29uIj48L2Rpdj48L2Rpdj4nfTt1LmNvbmZpZ3VyZT1mdW5jdGlvbihuKXt2YXIgZSx0O2ZvcihlIGluIG4pdD1uW2VdLHZvaWQgMCE9PXQmJm4uaGFzT3duUHJvcGVydHkoZSkmJihjW2VdPXQpO3JldHVybiB0aGlzfSx1LnN0YXR1cz1udWxsLHUuc2V0PWZ1bmN0aW9uKGUpe3ZhciByPXUuaXNTdGFydGVkKCk7ZT1uKGUsYy5taW5pbXVtLDEpLHUuc3RhdHVzPTE9PT1lP251bGw6ZTt2YXIgaT11LnJlbmRlcighcikscz1pLnF1ZXJ5U2VsZWN0b3IoYy5iYXJTZWxlY3Rvciksbz1jLnNwZWVkLGE9Yy5lYXNpbmc7cmV0dXJuIGkub2Zmc2V0V2lkdGgsbChmdW5jdGlvbihuKXsiIj09PWMucG9zaXRpb25Vc2luZyYmKGMucG9zaXRpb25Vc2luZz11LmdldFBvc2l0aW9uaW5nQ1NTKCkpLGYocyx0KGUsbyxhKSksMT09PWU/KGYoaSx7dHJhbnNpdGlvbjoibm9uZSIsb3BhY2l0eToxfSksaS5vZmZzZXRXaWR0aCxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZihpLHt0cmFuc2l0aW9uOiJhbGwgIitvKyJtcyBsaW5lYXIiLG9wYWNpdHk6MH0pLHNldFRpbWVvdXQoZnVuY3Rpb24oKXt1LnJlbW92ZSgpLG4oKX0sbyl9LG8pKTpzZXRUaW1lb3V0KG4sbyl9KSx0aGlzfSx1LmlzU3RhcnRlZD1mdW5jdGlvbigpe3JldHVybiJudW1iZXIiPT10eXBlb2YgdS5zdGF0dXN9LHUuc3RhcnQ9ZnVuY3Rpb24oKXt1LnN0YXR1c3x8dS5zZXQoMCk7dmFyIG49ZnVuY3Rpb24oKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dS5zdGF0dXMmJih1LnRyaWNrbGUoKSxuKCkpfSxjLnRyaWNrbGVTcGVlZCl9O3JldHVybiBjLnRyaWNrbGUmJm4oKSx0aGlzfSx1LmRvbmU9ZnVuY3Rpb24obil7cmV0dXJuIG58fHUuc3RhdHVzP3UuaW5jKC4zKy41Kk1hdGgucmFuZG9tKCkpLnNldCgxKTp0aGlzfSx1LmluYz1mdW5jdGlvbihlKXt2YXIgdD11LnN0YXR1cztyZXR1cm4gdD8oIm51bWJlciIhPXR5cGVvZiBlJiYoZT0oMS10KSpuKE1hdGgucmFuZG9tKCkqdCwuMSwuOTUpKSx0PW4odCtlLDAsLjk5NCksdS5zZXQodCkpOnUuc3RhcnQoKX0sdS50cmlja2xlPWZ1bmN0aW9uKCl7cmV0dXJuIHUuaW5jKE1hdGgucmFuZG9tKCkqYy50cmlja2xlUmF0ZSl9LGZ1bmN0aW9uKCl7dmFyIG49MCxlPTA7dS5wcm9taXNlPWZ1bmN0aW9uKHQpe3JldHVybiB0JiYicmVzb2x2ZWQiIT09dC5zdGF0ZSgpPygwPT09ZSYmdS5zdGFydCgpLG4rKyxlKyssdC5hbHdheXMoZnVuY3Rpb24oKXtlLS0sMD09PWU/KG49MCx1LmRvbmUoKSk6dS5zZXQoKG4tZSkvbil9KSx0aGlzKTp0aGlzfX0oKSx1LnJlbmRlcj1mdW5jdGlvbihuKXtpZih1LmlzUmVuZGVyZWQoKSlyZXR1cm4gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIm5wcm9ncmVzcyIpO2koZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LCJucHJvZ3Jlc3MtYnVzeSIpO3ZhciB0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO3QuaWQ9Im5wcm9ncmVzcyIsdC5pbm5lckhUTUw9Yy50ZW1wbGF0ZTt2YXIgcixzPXQucXVlcnlTZWxlY3RvcihjLmJhclNlbGVjdG9yKSxvPW4/Ii0xMDAiOmUodS5zdGF0dXN8fDApLGw9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihjLnBhcmVudCk7cmV0dXJuIGYocyx7dHJhbnNpdGlvbjoiYWxsIDAgbGluZWFyIix0cmFuc2Zvcm06InRyYW5zbGF0ZTNkKCIrbysiJSwwLDApIn0pLGMuc2hvd1NwaW5uZXJ8fChyPXQucXVlcnlTZWxlY3RvcihjLnNwaW5uZXJTZWxlY3RvciksciYmYShyKSksbCE9ZG9jdW1lbnQuYm9keSYmaShsLCJucHJvZ3Jlc3MtY3VzdG9tLXBhcmVudCIpLGwuYXBwZW5kQ2hpbGQodCksdH0sdS5yZW1vdmU9ZnVuY3Rpb24oKXtzKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCwibnByb2dyZXNzLWJ1c3kiKSxzKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYy5wYXJlbnQpLCJucHJvZ3Jlc3MtY3VzdG9tLXBhcmVudCIpO3ZhciBuPWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJucHJvZ3Jlc3MiKTtuJiZhKG4pfSx1LmlzUmVuZGVyZWQ9ZnVuY3Rpb24oKXtyZXR1cm4hIWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJucHJvZ3Jlc3MiKX0sdS5nZXRQb3NpdGlvbmluZ0NTUz1mdW5jdGlvbigpe3ZhciBuPWRvY3VtZW50LmJvZHkuc3R5bGUsZT0iV2Via2l0VHJhbnNmb3JtImluIG4/IldlYmtpdCI6Ik1velRyYW5zZm9ybSJpbiBuPyJNb3oiOiJtc1RyYW5zZm9ybSJpbiBuPyJtcyI6Ik9UcmFuc2Zvcm0iaW4gbj8iTyI6IiI7cmV0dXJuIGUrIlBlcnNwZWN0aXZlImluIG4/InRyYW5zbGF0ZTNkIjplKyJUcmFuc2Zvcm0iaW4gbj8idHJhbnNsYXRlIjoibWFyZ2luIn07dmFyIGw9ZnVuY3Rpb24oKXtmdW5jdGlvbiBuKCl7dmFyIHQ9ZS5zaGlmdCgpO3QmJnQobil9dmFyIGU9W107cmV0dXJuIGZ1bmN0aW9uKHQpe2UucHVzaCh0KSwxPT1lLmxlbmd0aCYmbigpfX0oKSxmPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gbihuKXtyZXR1cm4gbi5yZXBsYWNlKC9eLW1zLS8sIm1zLSIpLnJlcGxhY2UoLy0oW1xkYS16XSkvZ2ksZnVuY3Rpb24obixlKXtyZXR1cm4gZS50b1VwcGVyQ2FzZSgpfSl9ZnVuY3Rpb24gZShuKXt2YXIgZT1kb2N1bWVudC5ib2R5LnN0eWxlO2lmKG4gaW4gZSlyZXR1cm4gbjtmb3IodmFyIHQscj1pLmxlbmd0aCxzPW4uY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrbi5zbGljZSgxKTtyLS07KWlmKHQ9aVtyXStzLHQgaW4gZSlyZXR1cm4gdDtyZXR1cm4gbn1mdW5jdGlvbiB0KHQpe3JldHVybiB0PW4odCksc1t0XXx8KHNbdF09ZSh0KSl9ZnVuY3Rpb24gcihuLGUscil7ZT10KGUpLG4uc3R5bGVbZV09cn12YXIgaT1bIldlYmtpdCIsIk8iLCJNb3oiLCJtcyJdLHM9e307cmV0dXJuIGZ1bmN0aW9uKG4sZSl7dmFyIHQsaSxzPWFyZ3VtZW50cztpZigyPT1zLmxlbmd0aClmb3IodCBpbiBlKWk9ZVt0XSx2b2lkIDAhPT1pJiZlLmhhc093blByb3BlcnR5KHQpJiZyKG4sdCxpKTtlbHNlIHIobixzWzFdLHNbMl0pfX0oKTtyZXR1cm4gdX0pOw=="},{"meta":{"name":"clipboard.min.js","url":"https://lf26-cdn-tos.bytecdntp.com/cdn/expire-1-M/clipboard.js/2.0.10/clipboard.min.js","ts":1713420264090,"mimetype":"text/javascript"},"source":""}]},{"name":"网盘直链下载助手","options":{"check_for_updates":true,"user_modified":null,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_powerful_this":null,"sandbox":null,"noframes":null,"unwrap":null,"run_at":null,"tab_types":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["baidu.com","baidupcs.com","aliyundrive.com","alipan.com","189.cn","xunlei.com","quark.cn","youxiaohou.com","yun.139.com","caiyun.139.com","localhost","*"],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://pan.baidu.com/disk/home*","*://yun.baidu.com/disk/home*","*://pan.baidu.com/disk/main*","*://yun.baidu.com/disk/main*","*://pan.baidu.com/s/*","*://yun.baidu.com/s/*","*://pan.baidu.com/share/*","*://yun.baidu.com/share/*","*://www.aliyundrive.com/s/*","*://www.aliyundrive.com/drive*","*://www.alipan.com/s/*","*://www.alipan.com/drive*","*://cloud.189.cn/web/*","*://pan.xunlei.com/*","*://pan.quark.cn/*","*://yun.139.com/*","*://caiyun.139.com/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]}},"storage":{"ts":1712907791727,"data":{"license":"s","setting_init_code":"s","setting_rpc_dir":"sD:","setting_rpc_domain":"shttp://localhost","setting_rpc_path":"s/jsonrpc","setting_rpc_port":"s16800","setting_rpc_token":"s","setting_terminal_type":"swc","setting_theme_color":"s#09AAFF"}},"enabled":true,"position":3,"file_url":"https://update.greasyfork.org/scripts/436446/%E7%BD%91%E7%9B%98%E7%9B%B4%E9%93%BE%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B.user.js","uuid":"13c701c8-b228-4f61-b42c-2c862ea0583e","source":"","requires":[{"meta":{"name":"jquery.min.js","url":"https://registry.npmmirror.com/jquery/3.7.0/files/dist/jquery.min.js","ts":1721277422175,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"sweetalert2.all.min.js","url":"https://registry.npmmirror.com/sweetalert2/10.16.6/files/dist/sweetalert2.all.min.js","ts":1721277422165,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"md5.min.js","url":"https://registry.npmmirror.com/js-md5/0.7.3/files/build/md5.min.js","ts":1721277422158,"mimetype":"text/javascript"},"source":""}]}],"settings":{"script_blacklist_server":[{"rules":["/https?:\\/\\/userscripts\\.org\\/scripts\\/(source|version)/(102614).*\\.user\\.js/"],"severity":2},{"name":"SaveFrom.net helper","reason":"Shows advertisements","rules":["/https?:\\/\\/sf-addon\\.com\\/.*\\/.*\\.user\\.js/","/https?:\\/\\/.*\\.sf-helper\\.com\\/.*\\.user\\.js/"],"severity":3},{"reasons":{"en":"Used for a phishing compain to compromise users of baon-nutrition.com"},"rules":["/https?:\\/\\/files\\.ulysse\\.travel\\/.*\\.user\\.js/"],"severity":8}]}}